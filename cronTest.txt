>>> from crontab_parser import SimpleCrontabEntry
>>> from datetime import datetime

Some tests were taken here: http://www.thegeekstuff.com/2009/06/15-practical-crontab-examples/



``matches`` method testing:



>>> e = SimpleCrontabEntry('30 8 10 6 *')

>>> e.matches(datetime(1970, 6, 10, 8, 30))
True
>>> e.matches(datetime(1970, 6, 10, 8, 31))
False

>>> e = SimpleCrontabEntry('* * * * 0')

>>> e.matches(datetime(1970, 1, 4)) # 1/4/1970 is Sunday.
True
>>> e.matches(datetime(1970, 1, 1)) # 1/1/1970 is Thursday.
False

>>> e = SimpleCrontabEntry('* 5 * * 7')

>>> e.matches(datetime(1970, 1, 4, 5)) # 1/4/1970 is Sunday.
True
>>> e.matches(datetime(1970, 1, 1, 5)) # 1/1/1970 is Thursday.
False
>>> e.matches(datetime(1970, 1, 4)) # 1/4/1970 is Sunday.
False

>>> e = SimpleCrontabEntry('0 11,16 * * *')

>>> e.matches(datetime(1970, 1, 1, 16))
True
>>> e.matches(datetime(1970, 1, 1, 11, 30))
False

>>> e = SimpleCrontabEntry('0 9-18 * * *')

>>> e.matches(datetime(1970, 1, 1, 10))
True
>>> e.matches(datetime(1970, 1, 1, 14, 30))
False

>>> e = SimpleCrontabEntry('* * * * *')

>>> e.matches(datetime(1970, 1, 1))
True
>>> e.matches(datetime.now())
True

>>> e = SimpleCrontabEntry('0-10/2 * * * *')

>>> e.matches(datetime(1970, 1, 1))
True
>>> e.matches(datetime(1970, 1, 1, 0, 30))
False
>>> e.matches(datetime(1970, 1, 1, 0, 5))
False



``next_run`` method testing:



>>> e = SimpleCrontabEntry('30 8 10 6 *')

>>> e.next_run(datetime(1970, 1, 1))
datetime.datetime(1970, 6, 10, 8, 30)
>>> e.next_run(datetime(1970, 4, 1))
datetime.datetime(1970, 6, 10, 8, 30)

>>> e.next_run(datetime(1970, 6, 1))
datetime.datetime(1970, 6, 10, 8, 30)
>>> e.next_run(datetime(1970, 6, 6))
datetime.datetime(1970, 6, 10, 8, 30)

>>> e.next_run(datetime(1970, 6, 10))
datetime.datetime(1970, 6, 10, 8, 30)
>>> e.next_run(datetime(1970, 6, 10, 4))
datetime.datetime(1970, 6, 10, 8, 30)

>>> e.next_run(datetime(1970, 6, 10, 8))
datetime.datetime(1970, 6, 10, 8, 30)
>>> e.next_run(datetime(1970, 6, 10, 8, 15))
datetime.datetime(1970, 6, 10, 8, 30)

>>> e.next_run(datetime(1970, 6, 10, 8, 30))
datetime.datetime(1971, 6, 10, 8, 30)

>>> e = SimpleCrontabEntry('0 11,16 * * *')

>>> e.next_run(datetime(1970, 1, 1))
datetime.datetime(1970, 1, 1, 11, 0)
>>> e.next_run(datetime(1970, 1, 1, 14, 30))
datetime.datetime(1970, 1, 1, 16, 0)

>>> e = SimpleCrontabEntry('0 9-18 * * *')

>>> e.next_run(datetime(1970, 1, 1, 19))
datetime.datetime(1970, 1, 2, 9, 0)
>>> e.next_run(datetime(1970, 1, 1, 14, 30))
datetime.datetime(1970, 1, 1, 15, 0)

>>> e = SimpleCrontabEntry('0 9-18 * * 1-5')

>>> e.next_run(datetime(1970, 1, 1, 11)) # 1/1/1970 is Thursday.
datetime.datetime(1970, 1, 1, 12, 0)
>>> e.next_run(datetime(1970, 1, 3, 14, 30)) # 1/3/1970 is Saturday.
datetime.datetime(1970, 1, 5, 9, 0)

>>> e = SimpleCrontabEntry('* * * * *')

>>> e.next_run(datetime(1970, 1, 1))
datetime.datetime(1970, 1, 1, 0, 1)
>>> e.next_run(datetime(1970, 1, 1, 14, 30))
datetime.datetime(1970, 1, 1, 14, 31)

>>> e = SimpleCrontabEntry('0-10/2 * * * *')

>>> e.next_run(datetime(1970, 1, 1))
datetime.datetime(1970, 1, 1, 0, 2)
>>> e.next_run(datetime(1970, 1, 1, 14, 5))
datetime.datetime(1970, 1, 1, 14, 6)



``prev_run`` method testing:



>>> e = SimpleCrontabEntry('30 8 10 6 *')

>>> e.prev_run(datetime(1970, 1, 1))
datetime.datetime(1969, 6, 10, 8, 30)
>>> e.prev_run(datetime(1970, 6, 10, 8, 30))
datetime.datetime(1969, 6, 10, 8, 30)

>>> e = SimpleCrontabEntry('* 5 * * *')

>>> e.prev_run(datetime(1970, 4, 1))
datetime.datetime(1970, 3, 31, 5, 59)

>>> e = SimpleCrontabEntry('0 11,16 * * *')

>>> e.prev_run(datetime(1970, 1, 1))
datetime.datetime(1969, 12, 31, 16, 0)
>>> e.prev_run(datetime(1970, 1, 1, 13, 30))
datetime.datetime(1970, 1, 1, 11, 0)

>>> e = SimpleCrontabEntry('0 9-18 * * *')

>>> e.prev_run(datetime(1970, 1, 1, 19))
datetime.datetime(1970, 1, 1, 18, 0)
>>> e.prev_run(datetime(1970, 1, 1, 14, 30))
datetime.datetime(1970, 1, 1, 14, 0)

>>> e = SimpleCrontabEntry('* * * * *')

>>> e.prev_run(datetime(1970, 1, 1))
datetime.datetime(1969, 12, 31, 23, 59)
>>> e.prev_run(datetime(1970, 1, 1, 14, 30))
datetime.datetime(1970, 1, 1, 14, 29)

>>> e = SimpleCrontabEntry('0-10/2 * * * *')

>>> e.prev_run(datetime(1970, 1, 1))
datetime.datetime(1969, 12, 31, 23, 10)
>>> e.prev_run(datetime(1970, 1, 1, 14, 8))
datetime.datetime(1970, 1, 1, 14, 6)

>>> e = SimpleCrontabEntry('* 5 * * *')

>>> e.prev_run(datetime(1970, 5, 1))
datetime.datetime(1970, 4, 30, 5, 59)

>>> e = SimpleCrontabEntry('2,3,5,7 10 29 2 *')

>>> e.prev_run(datetime(1970, 1, 1)) # 1968 is the nearest leap-year.
datetime.datetime(1968, 2, 29, 10, 7)
